-- Created by Ebean DDL
-- To stop Ebean DDL generation, remove this comment (both lines) and start using Evolutions

-- !Ups

-- apply changes
create table company (
  id                            bigint generated by default as identity not null,
  created_at                    timestamp,
  updated_at                    timestamp,
  name                          varchar(255),
  constraint pk_company primary key (id)
);

create table crop (
  id                            bigint generated by default as identity not null,
  created_at                    timestamp,
  updated_at                    timestamp,
  introduced                    timestamptz,
  discontinued                  timestamptz,
  company_id                    bigint,
  user_id                       bigint,
  name                          varchar(255),
  constraint pk_crop primary key (id)
);

create table field (
  id                            bigint generated by default as identity not null,
  created_at                    timestamp,
  updated_at                    timestamp,
  north_east_latitude           float,
  north_east_longitude          float,
  south_west_latitude           float,
  south_west_longitude          float,
  user_id                       bigint,
  name                          varchar(255),
  constraint pk_field primary key (id)
);

create table pesticide_registration (
  id                            bigint generated by default as identity not null,
  created_at                    timestamp,
  updated_at                    timestamp,
  registration_number           varchar(255),
  usage                         varchar(255),
  pesticide_type                varchar(255),
  pesticide_name                varchar(255),
  abbreviation                  varchar(255),
  crop_name                     varchar(255),
  application_location          varchar(255),
  target_pest_disease           varchar(255),
  purpose                       varchar(255),
  dilution_amount               varchar(255),
  constraint pk_pesticide_registration primary key (id)
);

create table app_user (
  id                            bigint generated by default as identity not null,
  created_at                    timestamp,
  updated_at                    timestamp,
  reset_token_expires           timestamp,
  is_admin                      boolean,
  username                      varchar(255),
  email                         varchar(255),
  password                      varchar(255),
  reset_token                   varchar(255),
  constraint pk_app_user primary key (id)
);

create table work_history (
  id                            bigint generated by default as identity not null,
  created_at                    timestamp,
  updated_at                    timestamp,
  date                          date,
  start_time                    time,
  end_time                      time,
  field_id                      bigint,
  crop_id                       bigint,
  user_id                       bigint,
  content                       varchar(255),
  constraint pk_work_history primary key (id)
);

-- foreign keys and indices
create index ix_crop_company_id on crop (company_id);
alter table crop add constraint fk_crop_company_id foreign key (company_id) references company (id) on delete restrict on update restrict;

create index ix_crop_user_id on crop (user_id);
alter table crop add constraint fk_crop_user_id foreign key (user_id) references app_user (id) on delete restrict on update restrict;

create index ix_field_user_id on field (user_id);
alter table field add constraint fk_field_user_id foreign key (user_id) references app_user (id) on delete restrict on update restrict;

create index ix_work_history_field_id on work_history (field_id);
alter table work_history add constraint fk_work_history_field_id foreign key (field_id) references field (id) on delete restrict on update restrict;

create index ix_work_history_crop_id on work_history (crop_id);
alter table work_history add constraint fk_work_history_crop_id foreign key (crop_id) references crop (id) on delete restrict on update restrict;

create index ix_work_history_user_id on work_history (user_id);
alter table work_history add constraint fk_work_history_user_id foreign key (user_id) references app_user (id) on delete restrict on update restrict;


-- !Downs

-- drop all foreign keys
alter table if exists crop drop constraint if exists fk_crop_company_id;
drop index if exists ix_crop_company_id;

alter table if exists crop drop constraint if exists fk_crop_user_id;
drop index if exists ix_crop_user_id;

alter table if exists field drop constraint if exists fk_field_user_id;
drop index if exists ix_field_user_id;

alter table if exists work_history drop constraint if exists fk_work_history_field_id;
drop index if exists ix_work_history_field_id;

alter table if exists work_history drop constraint if exists fk_work_history_crop_id;
drop index if exists ix_work_history_crop_id;

alter table if exists work_history drop constraint if exists fk_work_history_user_id;
drop index if exists ix_work_history_user_id;

-- drop all
drop table if exists company cascade;

drop table if exists crop cascade;

drop table if exists field cascade;

drop table if exists pesticide_registration cascade;

drop table if exists app_user cascade;

drop table if exists work_history cascade;

